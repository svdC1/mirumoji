name: Attach Builds to GitHub Release

on:
    release:
        types: [published] # Trigger only when a release is published via the UI

jobs:
    build_executables:
        name: Build on ${{ matrix.os_name }}
        runs-on: ${{ matrix.os_image }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - os_image: ubuntu-latest
                      os_name: Linux
                      asset_name_suffix: linux
                      executable_name_base: mirumoji-launcher
                      final_executable_name: mirumoji-launcher
                    - os_image: macos-latest
                      os_name: macOS
                      asset_name_suffix: macos
                      executable_name_base: mirumoji-launcher
                      final_executable_name: mirumoji-launcher
                    - os_image: windows-latest
                      os_name: Windows
                      asset_name_suffix: windows
                      executable_name_base: mirumoji-launcher
                      final_executable_name: mirumoji-launcher.exe
        env:
            PYTHON_VERSION: "3.11"

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python ${{ env.PYTHON_VERSION }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install click python-dotenv
                  pip install pyinstaller

            - name: Build executable with PyInstaller
              run: pyinstaller --name ${{ matrix.executable_name_base }} --onefile --clean apps/cli/mirumoji/src/mirumoji/launcher.py

            - name: List dist directory contents (Post-PyInstaller)
              if: always()
              run: |
                  echo "Listing contents of ./dist/ for ${{ matrix.os_name }}"
                  ls -R ./dist/

            - name: Archive executable
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.executable_name_base }}-${{ matrix.asset_name_suffix }}
                  path: dist/${{ matrix.final_executable_name }}
                  if-no-files-found: error

    upload_assets_to_release:
        name: Upload Assets to Existing Release
        needs: build_executables
        runs-on: ubuntu-latest
        # This job now uses the context from the 'release' event
        permissions:
            contents: write # Required to write assets to releases

        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: List downloaded artifacts (Crucial for Debugging)
              run: ls -R artifacts

            - name: Upload Windows Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }} # Get upload_url from the trigger event
                  asset_path: ./artifacts/mirumoji-launcher-windows/mirumoji-launcher.exe
                  asset_name: mirumoji-launcher-windows.exe
                  asset_content_type: application/vnd.microsoft.portable-executable

            - name: Upload Linux Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./artifacts/mirumoji-launcher-linux/mirumoji-launcher
                  asset_name: mirumoji-launcher-linux
                  asset_content_type: application/octet-stream

            - name: Upload macOS Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./artifacts/mirumoji-launcher-macos/mirumoji-launcher
                  asset_name: mirumoji-launcher-macos
                  asset_content_type: application/octet-stream
